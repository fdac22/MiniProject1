We propose an autoencoder based approach to anomaly detection in smart grid systems. Data collecting sensors within smart home systems are susceptible to many corruption issues, such as malicious attacks or physical malfunctions. By applying machine learning to a smart home or grid, sensor anomalies can be detected automatically for secure data collection and sensor-based system functionality. In addition, we tested the effectiveness of this approach on real smart home sensor data collected for multiple years. An early detection of such data corruption issues is essential to the security and functionality of the various sensors and devices within a smart home.

Smart home technology is a fast growing market for consumers looking to make their home appliances and other systems "smart". The Boston Consulting Group estimates smart home usage will achieve a compound annual growth rate of 42 percent between 2017 and 2022 \cite{BCG_smarthome}. As the usage of smart home devices increases, the urgency for safety, security, and error correction also increases. In the world of smart technology, data collected by sensors for both diagnostics and data collection purposes are essential to proper system functionality. As more sensors are being included to monitor these systems and IoT grows in popularity, data corruption and anomaly detection has become more essential to safety and security within a smart grid. An anomaly is a data point that is significantly different from other data, and can be caused by data corruption, faulty sensors, or even tampering or attacks on the system. Malicious attacks can cause data alteration and potentially unwanted behavior within a smart device. Kaspersky, a global cyber-security company, detected more than 100 million attacks on smart devices in H1 2019 from 276,000 unique IP addresses \cite{Kaspersky2019}. The first defense to falsified data within a smart home system is developing an automated detection method that flags data statistically deemed to be suspicious.

Many important parameters exist in the design of a smart home that creates difficulty in the development of anomaly detection systems. Anomaly detection requires a well designed architecture that will allow for the smart grids to remain cost efficient and low power while maintaining high accuracy. The anomaly detection should also be dynamic, allowing for the detection algorithm to be tailored to the expected data of the sensor. Due to these constraints, utilizing computations in the cloud, such as in Figure \ref{BASIC}, are essential to generating autoencoder models for anomaly detection in low power nodes.

In this paper, we propose a machine learning based approach to detection of anomalous data in smart home systems. Smart home failure can cause many unsafe environments for home customers and alter data collection for future applications. While the use of autoencoders is not a new technique, we wish to highlight the importance of using software related anomaly detection alongside hardware tampering protection in smart home systems. Many data corruption or fault based systems utilize the potential for anomaly detection using autoencoders, such as the KPI's of web applications \cite{Xu_2018} or node failure in high performance computing systems \cite{Borghesi_2019}. We also demonstrate autoencoder usage on solar irradiance sensor data from smart homes, including a calculated F-Score determining the accuracy of the model.

The remainder of this paper is organized as follows. Section 2 demonstrates background of anomaly detection systems. Section 3 presents the proposed design. Section 4 demonstrates an application of the model on real smart home data. Section 5 provides a conclusion to this paper.

The field of smart home automation is rapidly growing as many new ideas and possibilities are emerging from new advances in technology. In order to regulate and monitor smart home appliances, many physical sensors are utilized in the design. Smart home devices contain many sensors within each device, all gathering important data that determines the behavior of the entire system. Important examples of sensor data, as given by Juan Augusto and Christ Nugent, include temperature, humidity, light, motion, and smoke detectors \cite{Augusto2006smart}. Sensors within the smart home system must remain accurate and operational to ensure safety and functionality.

Detection of sensor problems automatically is essential to being able to fix smart home systems quickly and efficiently, before harm can be done. Sensors can naturally become less reliable and can be damaged over time through various means, causing improper readings to occur. Sensors can also be tampered with physically to cause unreliable measurements. Physical tampering brings unsafe environments without proper detection, as malicious intent can manipulate entire systems that utilize collected data. In 2009, providers in the United States alone were estimated to have lost as much as \$6 billion to energy and smart meter theft. \cite{McDaniel_2009}. These kinds of problems require methods of checking for anomalies or suspicious data in collected data sets. 

When discussing smart home security, the hardware and software security are both essential to prevent unauthorized manipulation of the system that can lead to safety hazards and data tampering. For example, a smart security system with a broken sensor can result in the system reporting false negatives or positives to home safety conditions. One such threat is described by researchers at University of Queensland. Many devices may be battery operated and wirelessly networked with a low operational duty cycle. Flooding a network with requests can lead to the devices losing power, allowing manipulation of the smart home system in question. \cite{Queensland2016}. Potentially monitoring the network for such anomalies in network usage could be done using an autoencoder system.

Data anomaly detection is the process of discovering deviations or anomalies from normalized patterns. Such normalized patterns can be trained and represented using machine learning neural networks. An autoencoder is a neural network that is trained by unsupervised learning to learn reconstructions identical to it's original input.

Autoencoders are feed-forward and non-recurrent with an input, output, and hidden layers. They are composed of an encoder and decoder. As explained by Cho and An, the reconstruction of the data from an original input vector $x$ and the reconstruction output $z$ of a single hidden layer neural network is shown in equations \ref{HEQ} and \ref{ZEQ}. $W$ and $b$ are the weight and bias of the neural network and $\sigma$ is the nonlinear activation function. Equation \ref{ERROR} demonstrates the reconstruction error between the output and the input \cite{DataMiningCenter}. A data anomaly is detected when a statistically significant deviation occurs in the test/run-time data from the reconstruction data.

Anomaly detection using autoencoders is a very popular topic in utilizing machine learning in automated systems. From large, interconnected buildings with many measurements to super computer anomaly detection to detect problems in large scale systems, the application of machine learning based anomaly detection is a growing subject in many systems where individual human assessment of data is unfeasible or expensive.

In 2019, a study was done on autoencoder neural networks being used for anomaly detection in large scale building networks. They describe possible reasons for anomalies, such as structural problems, poorly functioning appliances, sudden user habit changes, and more. Recurrent and convolutional autoencoder models were developed on the "UK Homes Using Smart Home Technology" dataset to compare the results of the two autoencoders for large scale building usage. It was highlighted that both types of models were able to produce decent or good results in anomaly detection methods. \cite{Legrand2018Auto}.

To detect sensor anomalies in smart home systems and their monitoring features, we propose utilizing the reconstruction of an autoencoder model. The overall structure of the architecture is shown in Figure \ref{ARCHIT}. This structure demonstrates how past sensor data and real-time sensor data are used to generate a detection of anomalous and valid sensor data.

By training on data from the same resident or similar data, a model can be created to automatically determine when sensors are potentially acting incorrectly or tampering is possible. Systems containing sensors can then flag any data that requires reviewing. Figure \ref{STRUCT} shows the structure of such encoder-decoder neural networks.

The trained autoencoder should be periodically retrained with valid data that has been collected over time. This allows for more personalized data to be used within the neural network for the specific sensor of the smart home system. Data that is flagged as anomalous should not be used in this retraining process.

As a proof of concept, we developed an encoder model on previously collected sensor data of a real world smart home system to detect sensor anomalies automatically in the data collection of smart home research. We used the neural network features within Keras, a Python deep learning API, to develop this model. The autoencoder utilizes 1-dimensional convolution layers due to the time series data. Night time hours were used to allow for a cleaner detection system with 8 time steps per batch. The training process was completed with 50 epochs.

Data collected by a weather station placed in the backyard of a smart home was used as the training and test data for real world sensor anomalies. Solar irradiation was collected from sensors within the weather station, with a data set of corrupted data from a faulty sensor. Due to this, the provided data is a perfect model to provide an example of machine learning detection of potentially incorrect data.

The training data features hourly sensor reports for an entire year, approximately 8700 data points. This data contains no visible anomalies within the data, allowing for a strong training set to develop our autoencoder model. A small increase in the middle of the year as shown in \ref{TRAIN} is due to shifts in sunset hours can be seen during the summer months. This increase is negligible and does not affect the training in a significant way. The training data is shown in Figure \ref{TRAIN}.

The test data features hourly sensor reports for another year. Sensor drift can be detected during the night in this set of sensor values as the year progresses. The data corruption begins midyear and continues to worsen throughout the provided test set. Figure \ref{TEST} shows a time series plot of the corrupted data.

To determine an anomaly, the algorithm decides a threshold of deviation the data can be from the predicted value. Mean average error, or MAE, is calculated for each frame of 8 hours with equation \ref{MAEEQ}. Each data frame MAE is compared against the threshold to determine if the data is an anomaly. Figure \ref{MAE} demonstrates the Mean average error loss of the dataset. The calculated threshold of the autoencoder was 0.673. This means all MAE values greater than this will be considered anomalies.

The autoencoder's results show a very accurate detection of the sensor drift very soon after the drift began. Any data points classified as anomalies are highlighted in red in Figure \ref{ANOM}, which helps demonstrate this detection of the drift very well.

Test data is used to help generate a quantifiable measure of a model's accuracy on a data set. This quantifiable measure is known as F-Score, which is calculated using equation \ref{FSCORE}. False and true positives/negatives are determined by the original data's classification of anomalies in the data versus the algorithm's classification.

We use $\beta = 1$ to calculate our F score, making this an F1 score calculation. We determined the F1 score to be $F_{1} = 0.9982$. This was calculated based on 8 false negatives, 0 false positives, 724 true negatives, and 2188 true positives. This F score shows a strong accuracy of the algorithm on the data set of the solar irradiation sensor, demonstrating the effectiveness of autoencoders in this application.

In a smart home environment, corrupt data readings can risk both data collection and the safety of the resident. As shown in various other examples, an autoencoder approach to detection of anomalous data is a strong deterrent to sensor tampering and data corruption. A strong F score shows potential in the use of this machine learning detection method. Early detection of data corruption can prevent many malicious issues that risk security and safety of smart home systems.